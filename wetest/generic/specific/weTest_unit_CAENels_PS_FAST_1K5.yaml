version: {major: 1, minor: 1, bugfix: 0}

name: "unit test of CAENels fast PS 1K5"

macros:
    - TEST_TITLE:   
      P:              "Sec-Sub(x):Dis-Dev-Idx:"
      DELAY:          1 
      RETRY:          5 
      ## not specific to power supply (user inputs)
      # voltage 
      MAX_VOLTAGE:    10
      MIN_VOLTAGE:    0
      STEP_VOLTAGE:   5
      OVER_VOLTAGE:   11
      UNDER_VOLTAGE:  -1
      FINAL_VOLTAGE:  0
      # current
      MAX_CURRENT:    10
      MIN_CURRENT:    0
      STEP_CURRENT:   5
      OVER_CURRENT:   11
      UNDER_CURRENT:  -1
      FINAL_CURRENT:  0

      ## specific to power supply (won't change)
      IGNORE_VOLTAGE:     False  
      IGNORE_CURRENT:     False
      IGNORE_RAMP_UP:     False
      IGNORE_RAMP_DOWN:   False
      IGNORE_REGULATION:  False
      # PV names
      SET_VOLTAGE:    "USet"
      GET_VOLTAGE:    "URb"
      SET_CURRENT:    "ISet"
      GET_CURRENT:    "IRb"
      SET_RAMP_UP:    "URampSet"
      GET_RAMP_UP:    "URampRb"  
      SET_RAMP_DOWN:  "IRampSet"
      GET_RAMP_DOWN:  "IRampRb"
      SET_REGULATION: "RegModeSet"
      GET_REGULATION: "RegModeRb"
      # ramp values
      MAX_RAMP:    100
      MIN_RAMP:    0.1
      STEP_RAMP:   20
      OVER_RAMP:   101
      UNDER_RAMP:  0
      FINAL_RAMP:  1
      # regulation values
      REGULATION_STATE:   [0, 1]  # 0:CV, 1:CC
      FINAL_REGULATION:   1       # CC

include:
    - path: 'wetest/generic/weTest_unit_generic_power_supply.yaml'
      TEST_TITLE:     "unit test of CAENels fast PS 1K5 - ${P}"
      P:              ${P}
      DELAY:          ${DELAY}
      RETRY:          ${RETRY}
      # voltage
      IGNORE_VOLTAGE: ${IGNORE_VOLTAGE}  
      SET_VOLTAGE:    ${SET_VOLTAGE}
      GET_VOLTAGE:    ${GET_VOLTAGE}  
      MAX_VOLTAGE:    ${MAX_VOLTAGE}
      MIN_VOLTAGE:    ${MIN_VOLTAGE}
      STEP_VOLTAGE:   ${STEP_VOLTAGE}
      OVER_VOLTAGE:   ${OVER_VOLTAGE}
      UNDER_VOLTAGE:  ${UNDER_VOLTAGE}
      FINAL_VOLTAGE:  0 # should be value before unit test
      # current
      IGNORE_CURRENT: ${IGNORE_CURRENT} 
      SET_CURRENT:    ${SET_CURRENT}
      GET_CURRENT:    ${GET_CURRENT}
      MAX_CURRENT:    ${MAX_CURRENT}
      MIN_CURRENT:    ${MIN_CURRENT}
      STEP_CURRENT:   ${STEP_CURRENT}
      OVER_CURRENT:   ${OVER_CURRENT}
      UNDER_CURRENT:  ${UNDER_CURRENT}
      FINAL_CURRENT:  0 # should be value before unit test
      # ramp volt
      IGNORE_RAMP_UP: ${IGNORE_RAMP_UP} 
      SET_RAMP_UP:    ${SET_RAMP_UP}
      GET_RAMP_UP:    ${GET_RAMP_UP}  
      MAX_RAMP_UP:    ${MAX_RAMP}
      MIN_RAMP_UP:    ${MIN_RAMP}
      STEP_RAMP_UP:   ${STEP_RAMP}
      OVER_RAMP_UP:   ${OVER_RAMP}
      UNDER_RAMP_UP:  ${UNDER_RAMP}
      FINAL_RAMP_UP:  ${FINAL_RAMP}
      # ramp current
      IGNORE_RAMP_DOWN: ${IGNORE_RAMP_DOWN} 
      SET_RAMP_DOWN:    ${SET_RAMP_DOWN}
      GET_RAMP_DOWN:    ${GET_RAMP_DOWN}  
      MAX_RAMP_DOWN:    ${MAX_RAMP}
      MIN_RAMP_DOWN:    ${MIN_RAMP}
      STEP_RAMP_DOWN:   ${STEP_RAMP}
      OVER_RAMP_DOWN:   ${OVER_RAMP}
      UNDER_RAMP_DOWN:  ${UNDER_RAMP}
      FINAL_RAMP_DOWN:  ${FINAL_RAMP}
      # regulation mode
      IGNORE_REGULATION:  ${IGNORE_REGULATION} 
      SET_REGULATION:     ${SET_REGULATION}
      GET_REGULATION:     ${GET_REGULATION}
      REGULATION_STATE:   ${REGULATION_STATE}
      FINAL_REGULATION:   ${FINAL_REGULATION}
    